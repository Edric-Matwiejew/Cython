# Assignment 8 (part 1)
## Due 06/05/21

1. Using the cython code in 'examples' as reference, cythonize the module 'PyQuantumWalk' to create a faster C-extension module 'CyQuantumWalk'. 
	
'PyQuantumWalk' is a module simulating a the discrete-time quantum walk of a 1/2-spinor a line (or path) graph.

https://en.wikipedia.org/wiki/Quantum_walk

Loosely speaking, 

a. If the spinsor is spin down, [0,1], it moves to the left. 
b. If the spinsor is spin up, [0,1], it moves to the right.
c. If the spinsor in an a superposition, it will both left and right.

At each step the Spinor:

1. Put into an equal superposition at each of the line nodes (where it has probability density).
2. Moves from that node following the rules a to c.

Remember though, changes to the code using Cython should interefere with algorithms logic, the output should remain the same.


As a suggested order:

	* Identify scalar variables to statically type
	* Convert constant length arrays into static C arrays
	* Experiment with the dynamic allocation of C arrays

Report the speed up of you final Cythonized module.

2. Do you think the code in PyQuantumWalk is a good candidate for parallism?